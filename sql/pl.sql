CREATE OR REPLACE PROCEDURE ADD_DOCTOR(ID IN NUMBER, NAME IN VARCHAR2, PHONE_NUMBER IN NUMBER, 
SALARY IN NUMBER, DEPARTMENT_ID IN NUMBER, EMAIL IN VARCHAR2, PASSWORD IN VARCHAR2) IS
BEGIN
 INSERT INTO EMPLOYEES VALUES(ID, NAME, 'Doctor', PHONE_NUMBER, SALARY);
 INSERT INTO DOCTORS VALUES(ID, DEPARTMENT_ID, EMAIL);
 INSERT INTO LOGIN VALUES(ID, EMAIL, PASSWORD);
END;
/

BEGIN
	ADD_DOCTOR(4235, 'Malo', 13203, 14507, 89076, '456127@dot.com', '4156');
END;
/

CREATE OR REPLACE PROCEDURE FIX_APPOINTMENT(DOC_ID IN NUMBER, APPOINT_DATE IN VARCHAR2, START_TIME IN VARCHAR2, NAME IN VARCHAR2, AGE IN NUMBER, 
BLOOD_GROUP IN VARCHAR2) IS
PATIENT_ID NUMBER;
APPOINTMENT_ID NUMBER;
BEGIN
 SELECT MAX(ID)+1 INTO PATIENT_ID	FROM PATIENTS;
 INSERT INTO PATIENTS VALUES(PATIENT_ID, NAME, AGE, BLOOD_GROUP);
 
 SELECT MAX(ID)+1 INTO APPOINTMENT_ID	FROM APPOINTMENTS;
 INSERT INTO APPOINTMENTS VALUES(APPOINTMENT_ID, DOC_ID, PATIENT_ID, APPOINT_DATE --TO_DATE(APPOINT_DATE,'YYYY-MM-DD')
 , START_TIME, 'NOT GIVEN YET');
 
 UPDATE SCHEDULES SET SLOTS=SLOTS-1 WHERE ID=DOC_ID AND START_DATE=APPOINT_DATE; --TO_DATE(APPOINT_DATE,'YYYY-MM-DD');
END;
/

CREATE OR REPLACE TRIGGER SLOT_REDUCTION
AFTER UPDATE
OF SLOTS
ON SCHEDULES
FOR EACH ROW
DECLARE
BEGIN
	IF :NEW.SLOTS = 0 THEN
		DELETE FROM SCHEDULES WHERE ID = :NEW.ID;
	END IF;
END ;
/

